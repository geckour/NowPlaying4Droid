apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.geckour.nowplaying4gpm"
        minSdkVersion 25
        versionCode 7
        versionName "1.1.4"
        dataBinding.enabled = true

        def filesAuthorityValue = applicationId + ".files"
        manifestPlaceholders = [filesAuthority: filesAuthorityValue]
        buildConfigField "String", "FILES_AUTHORITY", "\"${filesAuthorityValue}\""
    }

    signingConfigs {
        debug {
            keyAlias 'AndroidDebugKey'
            keyPassword 'android'
            storeFile file("${project.rootDir}/app/signing/debug.keystore")
            storePassword 'android'
        }
        release {
            def releaseSettingGradleFile = new File("${project.rootDir}/app/signing/release.gradle")
            if (releaseSettingGradleFile.exists()) {
                apply from: releaseSettingGradleFile, to: android
            } else {
                throw new GradleException("Missing ${releaseSettingGradleFile.getAbsolutePath()} . Generate the file by copying and modifying ${project.rootDir}/app/signing/release.gradle.sample .")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
        useIR = true
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.1.1"
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.google.android.support:wearable:2.9.0'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.wear:wear:1.2.0'
    compileOnly 'com.google.android.wearable:wearable:2.9.0'
    implementation('com.google.firebase:firebase-core:21.0.0') {
        exclude group: 'com.google.android.gms', module: 'play-services-basement'
    }

    // Coroutines
    def coroutines_version = '1.6.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // JSON
    def moshi_version = "1.9.3"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Compose
    implementation "androidx.activity:activity-compose:1.4.0"
    implementation "androidx.compose.compiler:compiler:1.1.1"
    implementation "androidx.compose.ui:ui:1.1.1"
    implementation "androidx.compose.ui:ui-tooling:1.1.1"
    implementation "androidx.compose.material:material:1.1.1"
    implementation "androidx.wear.compose:compose-foundation:1.0.0-beta02"
    implementation "androidx.wear.compose:compose-material:1.0.0-beta02"
}
