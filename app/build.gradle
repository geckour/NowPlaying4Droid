plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.10'
}

kapt.mapDiagnosticLocations = true

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.geckour.nowplaying4droid"
        targetSdkVersion 33
        minSdkVersion 24
        versionCode 135
        versionName "3.1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        dataBinding.enabled = true

        def filesAuthorityValue = applicationId + ".files"
        manifestPlaceholders = [filesAuthority: filesAuthorityValue]
        buildConfigField "String", "FILES_AUTHORITY", "\"${filesAuthorityValue}\""
    }

    applicationVariants.all {
        def keyNameLastFm = "LAST_FM_API_KEY"
        it.buildConfigField "String", keyNameLastFm, getKey(keyNameLastFm)
        def keyNameTwitterConsumerKey = "TWITTER_CONSUMER_KEY"
        it.buildConfigField "String", keyNameTwitterConsumerKey, getKey(keyNameTwitterConsumerKey)
        def keyNameTwitterConsumerSecret = "TWITTER_CONSUMER_SECRET"
        it.buildConfigField "String", keyNameTwitterConsumerSecret, getKey(keyNameTwitterConsumerSecret)
        def keyNameSkuDonate = "SKU_KEY_DONATE"
        it.buildConfigField "String", keyNameSkuDonate, getKey(keyNameSkuDonate)
        def keyNameMastodonInstancesSecret = "MASTODON_INSTANCES_SECRET"
        it.buildConfigField "String", keyNameMastodonInstancesSecret, getKey(keyNameMastodonInstancesSecret)
        def keyNameSpotifyClientId = "SPOTIFY_CLIENT_ID"
        it.buildConfigField "String", keyNameSpotifyClientId, getKey(keyNameSpotifyClientId)
        def keyNameSpotifyClientSecret = "SPOTIFY_CLIENT_SECRET"
        it.buildConfigField "String", keyNameSpotifyClientSecret, getKey(keyNameSpotifyClientSecret)
        def keyNameGoogleCloudApiKey = "GOOGLE_CLOUD_API_KEY"
        it.buildConfigField "String", keyNameGoogleCloudApiKey, getKey(keyNameGoogleCloudApiKey)
        def keyNameAppleMusicKitSecretKey = "APPLE_MUSIC_KIT_SECRET_KEY"
        it.buildConfigField "String", keyNameAppleMusicKitSecretKey, getKey(keyNameAppleMusicKitSecretKey)
    }

    signingConfigs {
        debug {
            keyAlias "AndroidDebugKey"
            keyPassword "android"
            storeFile file("${project.rootDir}/app/signing/debug.keystore")
            storePassword "android"
        }
        release {
            def releaseSettingGradleFile = new File("${project.rootDir}/app/signing/release.gradle")
            apply from: releaseSettingGradleFile, to: android
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    dataBinding.enabled = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.4"
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    lint {
        checkReleaseBuilds false
    }
    namespace 'com.geckour.nowplaying4droid'
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/geckour/NowPlayingSubjectBuilder")

            credentials {
                username = githubProperties['gpr.usr']
                password = githubProperties['gpr.key']
            }
        }
    }
}

static def getKey(keyName) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File("secret.properties")))
    return "\"" + props[keyName] + "\""
}

dependencies {
    wearApp project(":wear")

    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.google.android.material:material:1.9.0-rc01"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.legacy:legacy-support-v13:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.3.0"
    implementation "androidx.browser:browser:1.5.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation platform('com.google.firebase:firebase-bom:31.5.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:runner:1.5.2"
    testImplementation "androidx.test.ext:junit:1.1.5"
    testImplementation 'org.robolectric:robolectric:4.10'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'io.mockk:mockk:1.13.5'
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // DI
    def koin_version = '3.4.0'
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"

    // Logging
    implementation "com.jakewharton.timber:timber:5.0.1"

    // KTX
    implementation "androidx.core:core-ktx:1.10.0"
    implementation 'androidx.activity:activity-ktx:1.7.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.6'

    // JSON
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'

    // Permission
    implementation "com.github.permissions-dispatcher:ktx:1.1.4"

    // ViewModel
    def lifecycle_version = "2.6.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Billing
    implementation "com.android.billingclient:billing-ktx:5.2.0"

    // Preference
    implementation "androidx.preference:preference-ktx:1.2.0"

    // Palette API
    implementation "androidx.palette:palette-ktx:1.0.0"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    def okhttp_version = "4.10.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Image processing
    implementation "io.coil-kt:coil:2.3.0"

    // Wear
    implementation "com.google.android.gms:play-services-wearable:18.0.0"

    // Mastodon
    implementation "com.github.sys1yagi.mastodon4j:mastodon4j:1.7.0"

    // Compose
    implementation "androidx.compose.ui:ui:1.4.1"
    implementation "androidx.compose.material:material:1.4.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.1"
    implementation "androidx.compose.material:material-icons-extended:1.4.1"
    implementation "androidx.activity:activity-compose:1.7.0"

    // Subject
    implementation "com.geckour.libraries.android:now-playing-subject-builder:1.2.1"

    // JWT
    implementation "com.auth0:java-jwt:4.4.0"
}

// Billing
apply plugin: "com.google.gms.google-services"

apply plugin: 'com.google.firebase.crashlytics'